name: Build
on: [ push, pull_request, workflow_dispatch ]
env:
  VERSION: "1.0.2"
jobs:
  build:
    strategy:
      matrix:
        java: [ 8, 11, 16, 17 ]
    name: üî• Build [Java ${{ matrix.java }}]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: ‚ù§Ô∏è Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          architecture: x64

      - name: üçé Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: üòé Create artifact directory
        run: mkdir ${{ GITHUB.WORKSPACE }}/DownloadArtifact

      - name: üö©Install Protobuf compiler
        uses: arduino/setup-protoc@v1

      - name: ü•∞ Compile protobuf files
        run: protoc -I=protobuf/ --java_out=Protocol/src/main/java/ protobuf/*.proto

      - name: üíª Build Commons
        run: |
          cd Commons
          mvn clean install -Dcompile.java_version=${{ matrix.java }} -Dcompile.version=v${{ env.VERSION }}-${{ github.sha }} -B -e
          mvn -Dcompile.java_version=${{ matrix.java }} -Dcompile.version=v${{ env.VERSION }}-${{ github.sha }} -B -e package --file pom.xml

      - name: üíª Build Protocol
        run: |
          cd Protocol
          mvn clean install -Dcompile.java_version=${{ matrix.java }} -Dcompile.version=v${{ env.VERSION }}-${{ github.sha }} -B -e
          mvn -Dcompile.java_version=${{ matrix.java }} -Dcompile.version=v${{ env.VERSION }}-${{ github.sha }} -B -e package --file pom.xml

      - name: üíª Build BungeeCord
        run: |
          cd BungeeCord
          mvn clean install -Dcompile.java_version=${{ matrix.java }} -Dcompile.version=v${{ env.VERSION }}-${{ github.sha }} -B -e
          mvn -Dcompile.output=${{ GITHUB.WORKSPACE }}/DownloadArtifact -Dcompile.java_version=${{ matrix.java }} -Dcompile.version=v${{ env.VERSION }}-${{ github.sha }} -B -e package --file pom.xml

      - name: üíª Build Spigot
        run: |
          cd Spigot
          mvn clean install -Dcompile.java_version=${{ matrix.java }} -Dcompile.version=v${{ env.VERSION }}-${{ github.sha }} -B -e
          mvn -Dcompile.output=${{ GITHUB.WORKSPACE }}/DownloadArtifact -Dcompile.java_version=${{ matrix.java }} -Dcompile.version=v${{ env.VERSION }}-${{ github.sha }} -B -e package --file pom.xml

      - name: üñ§ Create artifact
        uses: 'actions/upload-artifact@v2'
        with:
          name: "OpenSourceSectors_v${{ env.VERSION }}-${{ github.sha }}-JDK${{ matrix.java }}"
          path: '${{ GITHUB.WORKSPACE }}/DownloadArtifact/*'
          retention-days: 7
          if-no-files-found: error